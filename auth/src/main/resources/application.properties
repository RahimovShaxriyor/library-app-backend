spring.cloud.config.enabled=false

# Server Configuration
server.port=8082
spring.application.name=auth-service

# Database Configuration - ??? Docker Compose
spring.datasource.url=jdbc:oracle:thin:@oracle-db:1521/FREEPDB1
spring.datasource.username=system
spring.datasource.password=StrongPassword123
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Hikari Connection Pool
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Redis Configuration - ??? Docker Compose
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# JWT Configuration
jwt.secret=bUeXaiV7t25agVd244f/sL1bVfH8a9hKkP2fN6qW8yR3gC7jE0lO+oZ5cN4mX6rD/pI9sT1vY2uW3xZ/qA==
jwt.access-token-expiration-ms=900000
jwt.refresh-token-expiration-ms=604800000

# Rate Limiting Configuration
bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].url=/api/auth/login
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=10
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].http-response-body={ "message": "?? ????????? ????? ???????? ?? ????.", "status": 429 }

bucket4j.filters[1].cache-name=buckets
bucket4j.filters[1].url=/api/auth/forgot-password
bucket4j.filters[1].rate-limits[0].bandwidths[0].capacity=5
bucket4j.filters[1].rate-limits[0].bandwidths[0].time=10
bucket4j.filters[1].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[1].http-response-body={ "message": "?? ????????? ????? ???????? ?? ????? ??????.", "status": 429 }

bucket4j.filters[2].cache-name=buckets
bucket4j.filters[2].url=/api/auth/register
bucket4j.filters[2].rate-limits[0].bandwidths[0].capacity=20
bucket4j.filters[2].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[2].rate-limits[0].bandwidths[0].unit=hours
bucket4j.filters[2].http-response-body={ "message": "?? ????????? ????? ???????? ?? ???????????.", "status": 429 }

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://registr-service:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# Management Endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.redis.enabled=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.example.auth=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Retry Configuration
spring.datasource.hikari.initialization-fail-timeout=60000